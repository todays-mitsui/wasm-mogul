.console {
  --list-margin: 3px;

  color: var(--text-color);
  background-color: var(--color-background);
}

.ordered {
  counter-reset: ordered-list -1;
  li::before {
    counter-increment: ordered-list;
    content: counter(ordered-list);
  }
}

.unordered li::before {
  content: "-";
}

.unit {
  &:not(:last-child) {
    border-bottom: 1px solid var(--color-border-gloom);
  }

  li:not(:last-child) {
    border-bottom: 1px solid var(--color-border);
  }

  li {
    display: grid;
    grid-template-columns: 40px 1em auto;
    gap: 4px;
    padding: var(--list-margin) 4px var(--list-margin) 0;

    code {
      grid-column: 2 / 4;
    }
  }

  li::before {
    margin: calc(-1 * var(--list-margin)) 0;
    padding: 5px 6px 5px 0;
    color: #aaa;
    font-family: monospace;
    font-size: .8em;
    line-height: 2;
    text-align: right;
    background-color: #ececf1;
  }

  code {
    font-family: "Inconsolata", monospace;
    line-height: 1.7;
    word-break: break-all;
  }
}

.define {
  li:not(:first-child)::after {
    content: "=";
  }
}

.define,
.reduce,
.unlambda {
  li:not(:first-child)::after {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    color: #999;
    text-align: center;
  }

  li:first-child code {
    grid-column: 2 / 4;
  }
  li:not(:first-child) code {
    grid-column: 3 / 4;
  }
}
